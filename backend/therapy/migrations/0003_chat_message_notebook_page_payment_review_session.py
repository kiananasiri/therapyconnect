# Generated by Django 5.2.6 on 2025-09-03 18:39

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('therapy', '0002_therapist'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.CharField(help_text='Format: CHAT_{therapist_id}_{patient_id}', max_length=20, primary_key=True, serialize=False)),
                ('therapist_first_name', models.CharField(max_length=100)),
                ('therapist_last_name', models.CharField(max_length=100)),
                ('therapist_id', models.CharField(max_length=8)),
                ('patient_first_name', models.CharField(max_length=100)),
                ('patient_last_name', models.CharField(max_length=100)),
                ('patient_id', models.CharField(max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Chat',
                'verbose_name_plural': 'Chats',
                'db_table': 'chats',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.CharField(help_text='Format: MSG_{timestamp}_{random_string}', max_length=20, primary_key=True, serialize=False)),
                ('chat_id', models.CharField(max_length=20)),
                ('sender_id', models.CharField(help_text='ID of the sender (therapist or patient)', max_length=8)),
                ('text', models.TextField()),
                ('emergency', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'messages',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.CharField(help_text='Format: NOTE_{author_id}_{timestamp}', max_length=20, primary_key=True, serialize=False)),
                ('author_id', models.CharField(help_text='ID of the author (therapist or patient)', max_length=8)),
                ('front_note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notebook',
                'verbose_name_plural': 'Notebooks',
                'db_table': 'notebooks',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.CharField(help_text='Format: PAGE_{notebook_id}_{timestamp}', max_length=20, primary_key=True, serialize=False)),
                ('notebook_id', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('text', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'db_table': 'pages',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.CharField(help_text='Format: PAY_{YYYYMMDD}_{random_string}', max_length=20, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=50)),
                ('therapist_first_name', models.CharField(max_length=100)),
                ('therapist_last_name', models.CharField(max_length=100)),
                ('therapist_id', models.CharField(max_length=8)),
                ('patient_first_name', models.CharField(max_length=100)),
                ('patient_last_name', models.CharField(max_length=100)),
                ('patient_id', models.CharField(max_length=8)),
                ('stat', models.CharField(choices=[('unpaid', 'Unpaid'), ('successful', 'Successful'), ('unsuccessful', 'Unsuccessful'), ('waived', 'Waived')], default='unpaid', max_length=20)),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payments',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.CharField(help_text='Format: REV_{timestamp}_{random_string}', max_length=20, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.RegexValidator(message='Score must be between 0 and 10 in 0.5 steps', regex='^([0-9]|10)(\\.5)?$')])),
                ('text', models.TextField(blank=True, null=True)),
                ('therapist_first_name', models.CharField(max_length=100)),
                ('therapist_last_name', models.CharField(max_length=100)),
                ('therapist_id', models.CharField(max_length=8)),
                ('patient_first_name', models.CharField(max_length=100)),
                ('patient_last_name', models.CharField(max_length=100)),
                ('patient_id', models.CharField(max_length=8)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'db_table': 'reviews',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.CharField(help_text='Format: {therapist_id}_{patient_id}_{YYYYMMDD_HHMM}', max_length=50, primary_key=True, serialize=False)),
                ('therapist_first_name', models.CharField(max_length=100)),
                ('therapist_last_name', models.CharField(max_length=100)),
                ('therapist_id', models.CharField(max_length=8)),
                ('patient_first_name', models.CharField(max_length=100)),
                ('patient_last_name', models.CharField(max_length=100)),
                ('patient_id', models.CharField(max_length=8)),
                ('scheduled_start_datetime', models.DateTimeField()),
                ('payment_stat', models.CharField(default='pending', max_length=20)),
                ('fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('commencing', 'Commencing'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='scheduled', max_length=20)),
                ('therapist_notes', models.TextField(blank=True, null=True)),
                ('patient_notes', models.TextField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(default=60, help_text='Duration in minutes')),
                ('patient_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.RegexValidator(message='Rating must be between 0 and 10 in 0.5 steps', regex='^([0-9]|10)(\\.5)?$')])),
                ('patient_input', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'db_table': 'sessions',
                'ordering': ['-scheduled_start_datetime'],
            },
        ),
    ]
