version: '3.8'
services:
  nginx:
    image: nginx:latest
    restart: always
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf.template
      - ./entrypoint.sh:/entrypoint.sh
      - certbot-ssl:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    entrypoint: ["/bin/sh", "/entrypoint.sh"]

  backend:
    build: ./backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DJANGO_ALLOWED_HOSTS=${DOMAIN}
      - CORS_ALLOWED_ORIGINS=https://${DOMAIN}
    expose:
      - "8000"
  frontend:
    build: ./frontend
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=443
      - REACT_APP_BACKEND_URL=https://${DOMAIN}:8000
    stdin_open: true
    tty: true
    depends_on:
      - backend
    ports:
      - "3000:3000"
    expose:
      - "3000"
    restart: always
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: mmd
      MYSQL_DATABASE: therapy_db
      MYSQL_USER: mmd
      MYSQL_PASSWORD: mmd
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "mmd", "-pmmd"]
      interval: 10s
      retries: 5
      timeout: 5s
    restart: always

  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - certbot-ssl:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email --force-renewal
      -d ${DOMAIN} -d www.${DOMAIN} && nginx -s reload"

volumes:
  certbot-ssl:
  certbot-www:
